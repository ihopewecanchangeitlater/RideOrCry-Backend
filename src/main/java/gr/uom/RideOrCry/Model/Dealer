package gr.uom.RideOrCry.Model;

import java.util.regex.Pattern;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;


@Entity
public class Dealer {

    @Id
    @NotNull(message = "AFM is required.")
    private Integer afm;

    @NotBlank(message = "Name is required.")
    @Size(min = 2, max = 50, message = "Name must be between 2 and 50 characters.")
    private String name;

    @NotBlank(message = "Email is required.")
    @Email(regexp = "[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}",
           message = "Invalid email address.")
    private String email;

    @NotBlank(message = "Password is required.")
    @Size(min = 6, message = "Password must be at least 6 characters long.")
    private String password;
    
    @NotBlank(message = "Owner name is required.")
    private String owner;  
    
    public Dealer() { 
    }
    
    public Dealer(Integer afm, String name, String email, String password, String owner) { 
        this.afm = afm;
        this.name = name;
        this.email = email; 
        this.password = password;
        this.owner = owner; 
    }
    
    public Integer getAfm() {
    	return afm; 
    }
    
    public String getName() {
    	return name; 
    }
    
    public String getEmail() {
    	return email; 
    }
    
    public String getPassword() {
    	return password;
    }
    
    public String getOwner() { 
        return owner;
    }
    
}

